@using CGateMetricsGui.Models;


<RadzenCard class="rz-background-color-info-lighter">
    <RadzenRow>
        <RadzenColumn>
            <RadzenText>Kennzeichen</RadzenText>
        </RadzenColumn>
        <RadzenColumn>
            <RadzenText>Fahrer</RadzenText>
        </RadzenColumn>
        <RadzenColumn>
            <RadzenText>Firma</RadzenText>
        </RadzenColumn>
        <RadzenColumn>
            
        </RadzenColumn>
    </RadzenRow>
</RadzenCard>


@if (Data != null)
{
    @foreach (var item in Data)
    {
        @*<RadzenCard class="mt-2 rz-background-color-base-200">*@
        <RadzenCard class="@((Data.IndexOf(item) % 2 == 1) ? "mt-2 py-1 rz-background-color-base-100" : "mt-2 py-1 rz-background-color-base-300")">
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn>
                    <RadzenText>@item.Kennzeichen</RadzenText>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenText>@item.Fahrer</RadzenText>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenText>@item.Firma</RadzenText>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" Click="@(()=>BookingHandler(item))">Buchen</RadzenButton>
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    }
}

@code {
    [Inject] public NavigationManager NavigationManager { get; set; }
    [Parameter] public List<CurrentVehiclesIn> Data { get; set; }

    private void BookingHandler(CurrentVehiclesIn item)
    {
        NavigationManager.NavigateTo($"/CreateBuchung/{item.BookingId}");
    }

    
}
